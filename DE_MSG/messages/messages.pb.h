/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 */

#ifndef PB_MESSAGES_PB_H_INCLUDED
#define PB_MESSAGES_PB_H_INCLUDED
#include "pb.h"
#include "types.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _MessageType {
    MessageType_MessageType_Initialize = 0,
    MessageType_MessageType_Ping = 1,
    MessageType_MessageType_Success = 2,
    MessageType_MessageType_Failure = 3,
    MessageType_MessageType_ChangePin = 4,
    MessageType_MessageType_WipeDevice = 5,
    MessageType_MessageType_FirmwareErase = 6,
    MessageType_MessageType_FirmwareUpload = 7,
    MessageType_MessageType_FirmwareRequest = 8,
    MessageType_MessageType_GetEntropy = 9,
    MessageType_MessageType_Entropy = 10,
    MessageType_MessageType_GetPublicKey = 11,
    MessageType_MessageType_PublicKey = 12,
    MessageType_MessageType_LoadDevice = 13,
    MessageType_MessageType_ResetDevice = 14,
    MessageType_MessageType_SignTx = 15,
    MessageType_MessageType_SimpleSignTx = 16,
    MessageType_MessageType_Features = 17,
    MessageType_MessageType_PinMatrixRequest = 18,
    MessageType_MessageType_PinMatrixAck = 19,
    MessageType_MessageType_Cancel = 20,
    MessageType_MessageType_TxRequest = 21,
    MessageType_MessageType_TxAck = 22,
    MessageType_MessageType_CipherKeyValue = 23,
    MessageType_MessageType_ClearSession = 24,
    MessageType_MessageType_ApplySettings = 25,
    MessageType_MessageType_ButtonRequest = 26,
    MessageType_MessageType_ButtonAck = 27,
    MessageType_MessageType_ApplyFlags = 28,
    MessageType_MessageType_GetAddress = 29,
    MessageType_MessageType_Address = 30,
    MessageType_MessageType_SelfTest = 32,
    MessageType_MessageType_BackupDevice = 34,
    MessageType_MessageType_EntropyRequest = 35,
    MessageType_MessageType_EntropyAck = 36,
    MessageType_MessageType_SignMessage = 38,
    MessageType_MessageType_VerifyMessage = 39,
    MessageType_MessageType_MessageSignature = 40,
    MessageType_MessageType_PassphraseRequest = 41,
    MessageType_MessageType_PassphraseAck = 42,
    MessageType_MessageType_PassphraseStateRequest = 77,
    MessageType_MessageType_PassphraseStateAck = 78,
    MessageType_MessageType_EstimateTxSize = 43,
    MessageType_MessageType_TxSize = 44,
    MessageType_MessageType_RecoveryDevice = 45,
    MessageType_MessageType_WordRequest = 46,
    MessageType_MessageType_WordAck = 47,
    MessageType_MessageType_CipheredKeyValue = 48,
    MessageType_MessageType_EncryptMessage = 49,
    MessageType_MessageType_EncryptedMessage = 50,
    MessageType_MessageType_DecryptMessage = 51,
    MessageType_MessageType_DecryptedMessage = 52,
    MessageType_MessageType_SignIdentity = 53,
    MessageType_MessageType_SignedIdentity = 54,
    MessageType_MessageType_GetFeatures = 55,
    MessageType_MessageType_EthereumGetAddress = 56,
    MessageType_MessageType_EthereumAddress = 57,
    MessageType_MessageType_EthereumSignTx = 58,
    MessageType_MessageType_EthereumTxRequest = 59,
    MessageType_MessageType_EthereumTxAck = 60,
    MessageType_MessageType_GetECDHSessionKey = 61,
    MessageType_MessageType_ECDHSessionKey = 62,
    MessageType_MessageType_SetU2FCounter = 63,
    MessageType_MessageType_EthereumSignMessage = 64,
    MessageType_MessageType_EthereumVerifyMessage = 65,
    MessageType_MessageType_EthereumMessageSignature = 66,
    MessageType_MessageType_NEMGetAddress = 67,
    MessageType_MessageType_NEMAddress = 68,
    MessageType_MessageType_NEMSignTx = 69,
    MessageType_MessageType_NEMSignedTx = 70,
    MessageType_MessageType_CosiCommit = 71,
    MessageType_MessageType_CosiCommitment = 72,
    MessageType_MessageType_CosiSign = 73,
    MessageType_MessageType_CosiSignature = 74,
    MessageType_MessageType_NEMDecryptMessage = 75,
    MessageType_MessageType_NEMDecryptedMessage = 76,
    MessageType_MessageType_DebugLinkDecision = 100,
    MessageType_MessageType_DebugLinkGetState = 101,
    MessageType_MessageType_DebugLinkState = 102,
    MessageType_MessageType_DebugLinkStop = 103,
    MessageType_MessageType_DebugLinkLog = 104,
    MessageType_MessageType_DebugLinkMemoryRead = 110,
    MessageType_MessageType_DebugLinkMemory = 111,
    MessageType_MessageType_DebugLinkMemoryWrite = 112,
    MessageType_MessageType_DebugLinkFlashErase = 113,
    MessageType_MessageType_LiskGetAddress = 114,
    MessageType_MessageType_LiskAddress = 115,
    MessageType_MessageType_LiskSignTx = 116,
    MessageType_MessageType_LiskSignedTx = 117,
    MessageType_MessageType_LiskGetPublicKey = 121,
    MessageType_MessageType_LiskPublicKey = 122,
    MessageType_MessageType_StellarGetPublicKey = 200,
    MessageType_MessageType_StellarPublicKey = 201,
    MessageType_MessageType_StellarSignTx = 202,
    MessageType_MessageType_StellarTxOpRequest = 203,
    MessageType_MessageType_StellarCreateAccountOp = 210,
    MessageType_MessageType_StellarPaymentOp = 211,
    MessageType_MessageType_StellarPathPaymentOp = 212,
    MessageType_MessageType_StellarManageOfferOp = 213,
    MessageType_MessageType_StellarCreatePassiveOfferOp = 214,
    MessageType_MessageType_StellarSetOptionsOp = 215,
    MessageType_MessageType_StellarChangeTrustOp = 216,
    MessageType_MessageType_StellarAllowTrustOp = 217,
    MessageType_MessageType_StellarAccountMergeOp = 218,
    MessageType_MessageType_StellarManageDataOp = 220,
    MessageType_MessageType_StellarBumpSequenceOp = 221,
    MessageType_MessageType_StellarSignedTx = 230
} MessageType;
#define _MessageType_MIN MessageType_MessageType_Initialize
#define _MessageType_MAX MessageType_MessageType_StellarSignedTx
#define _MessageType_ARRAYSIZE ((MessageType)(MessageType_MessageType_StellarSignedTx+1))

/* Struct definitions */
typedef struct _BackupDevice {
    char dummy_field;
/* @@protoc_insertion_point(struct:BackupDevice) */
} BackupDevice;

typedef struct _ButtonAck {
    char dummy_field;
/* @@protoc_insertion_point(struct:ButtonAck) */
} ButtonAck;

typedef struct _Cancel {
    char dummy_field;
/* @@protoc_insertion_point(struct:Cancel) */
} Cancel;

typedef struct _ClearSession {
    char dummy_field;
/* @@protoc_insertion_point(struct:ClearSession) */
} ClearSession;

typedef struct _DebugLinkGetState {
    char dummy_field;
/* @@protoc_insertion_point(struct:DebugLinkGetState) */
} DebugLinkGetState;

typedef struct _DebugLinkStop {
    char dummy_field;
/* @@protoc_insertion_point(struct:DebugLinkStop) */
} DebugLinkStop;

typedef struct _EntropyRequest {
    char dummy_field;
/* @@protoc_insertion_point(struct:EntropyRequest) */
} EntropyRequest;

typedef struct _GetFeatures {
    char dummy_field;
/* @@protoc_insertion_point(struct:GetFeatures) */
} GetFeatures;

typedef struct _PassphraseStateAck {
    char dummy_field;
/* @@protoc_insertion_point(struct:PassphraseStateAck) */
} PassphraseStateAck;

typedef struct _StellarTxOpRequest {
    char dummy_field;
/* @@protoc_insertion_point(struct:StellarTxOpRequest) */
} StellarTxOpRequest;

typedef struct _WipeDevice {
    char dummy_field;
/* @@protoc_insertion_point(struct:WipeDevice) */
} WipeDevice;

typedef struct _Address {
    char address[130];
/* @@protoc_insertion_point(struct:Address) */
} Address;

typedef struct _ApplyFlags {
    bool has_flags;
    uint32_t flags;
/* @@protoc_insertion_point(struct:ApplyFlags) */
} ApplyFlags;

typedef PB_BYTES_ARRAY_T(1024) ApplySettings_homescreen_t;
typedef struct _ApplySettings {
    bool has_language;
    char language[17];
    bool has_label;
    char label[33];
    bool has_use_passphrase;
    bool use_passphrase;
    bool has_homescreen;
    ApplySettings_homescreen_t homescreen;
    bool has_passphrase_source;
    PassphraseSourceType passphrase_source;
    bool has_auto_lock_delay_ms;
    uint32_t auto_lock_delay_ms;
/* @@protoc_insertion_point(struct:ApplySettings) */
} ApplySettings;

typedef struct _ButtonRequest {
    bool has_code;
    ButtonRequestType code;
    bool has_data;
    char data[256];
/* @@protoc_insertion_point(struct:ButtonRequest) */
} ButtonRequest;

typedef struct _ChangePin {
    bool has_remove;
    bool remove;
/* @@protoc_insertion_point(struct:ChangePin) */
} ChangePin;

typedef PB_BYTES_ARRAY_T(1024) CipherKeyValue_value_t;
typedef PB_BYTES_ARRAY_T(16) CipherKeyValue_iv_t;
typedef struct _CipherKeyValue {
    pb_size_t address_n_count;
    uint32_t address_n[8];
    bool has_key;
    char key[256];
    bool has_value;
    CipherKeyValue_value_t value;
    bool has_encrypt;
    bool encrypt;
    bool has_ask_on_encrypt;
    bool ask_on_encrypt;
    bool has_ask_on_decrypt;
    bool ask_on_decrypt;
    bool has_iv;
    CipherKeyValue_iv_t iv;
/* @@protoc_insertion_point(struct:CipherKeyValue) */
} CipherKeyValue;

typedef PB_BYTES_ARRAY_T(1024) CipheredKeyValue_value_t;
typedef struct _CipheredKeyValue {
    bool has_value;
    CipheredKeyValue_value_t value;
/* @@protoc_insertion_point(struct:CipheredKeyValue) */
} CipheredKeyValue;

typedef PB_BYTES_ARRAY_T(32) CosiCommit_data_t;
typedef struct _CosiCommit {
    pb_size_t address_n_count;
    uint32_t address_n[8];
    bool has_data;
    CosiCommit_data_t data;
/* @@protoc_insertion_point(struct:CosiCommit) */
} CosiCommit;

typedef PB_BYTES_ARRAY_T(32) CosiCommitment_commitment_t;
typedef PB_BYTES_ARRAY_T(32) CosiCommitment_pubkey_t;
typedef struct _CosiCommitment {
    bool has_commitment;
    CosiCommitment_commitment_t commitment;
    bool has_pubkey;
    CosiCommitment_pubkey_t pubkey;
/* @@protoc_insertion_point(struct:CosiCommitment) */
} CosiCommitment;

typedef PB_BYTES_ARRAY_T(32) CosiSign_data_t;
typedef PB_BYTES_ARRAY_T(32) CosiSign_global_commitment_t;
typedef PB_BYTES_ARRAY_T(32) CosiSign_global_pubkey_t;
typedef struct _CosiSign {
    pb_size_t address_n_count;
    uint32_t address_n[8];
    bool has_data;
    CosiSign_data_t data;
    bool has_global_commitment;
    CosiSign_global_commitment_t global_commitment;
    bool has_global_pubkey;
    CosiSign_global_pubkey_t global_pubkey;
/* @@protoc_insertion_point(struct:CosiSign) */
} CosiSign;

typedef PB_BYTES_ARRAY_T(32) CosiSignature_signature_t;
typedef struct _CosiSignature {
    bool has_signature;
    CosiSignature_signature_t signature;
/* @@protoc_insertion_point(struct:CosiSignature) */
} CosiSignature;

typedef struct _DebugLinkDecision {
    bool has_yes_no;
    bool yes_no;
    bool has_up_down;
    bool up_down;
    bool has_input;
    char input[33];
/* @@protoc_insertion_point(struct:DebugLinkDecision) */
} DebugLinkDecision;

typedef struct _DebugLinkFlashErase {
    bool has_sector;
    uint32_t sector;
/* @@protoc_insertion_point(struct:DebugLinkFlashErase) */
} DebugLinkFlashErase;

typedef struct _DebugLinkLog {
    bool has_level;
    uint32_t level;
    bool has_bucket;
    char bucket[33];
    bool has_text;
    char text[256];
/* @@protoc_insertion_point(struct:DebugLinkLog) */
} DebugLinkLog;

typedef PB_BYTES_ARRAY_T(1024) DebugLinkMemory_memory_t;
typedef struct _DebugLinkMemory {
    bool has_memory;
    DebugLinkMemory_memory_t memory;
/* @@protoc_insertion_point(struct:DebugLinkMemory) */
} DebugLinkMemory;

typedef struct _DebugLinkMemoryRead {
    bool has_address;
    uint32_t address;
    bool has_length;
    uint32_t length;
/* @@protoc_insertion_point(struct:DebugLinkMemoryRead) */
} DebugLinkMemoryRead;

typedef PB_BYTES_ARRAY_T(1024) DebugLinkMemoryWrite_memory_t;
typedef struct _DebugLinkMemoryWrite {
    bool has_address;
    uint32_t address;
    bool has_memory;
    DebugLinkMemoryWrite_memory_t memory;
    bool has_flash;
    bool flash;
/* @@protoc_insertion_point(struct:DebugLinkMemoryWrite) */
} DebugLinkMemoryWrite;

typedef PB_BYTES_ARRAY_T(1024) DebugLinkState_layout_t;
typedef PB_BYTES_ARRAY_T(128) DebugLinkState_reset_entropy_t;
typedef struct _DebugLinkState {
    bool has_layout;
    DebugLinkState_layout_t layout;
    bool has_pin;
    char pin[10];
    bool has_matrix;
    char matrix[10];
    bool has_mnemonic;
    char mnemonic[241];
    bool has_node;
    HDNodeType node;
    bool has_passphrase_protection;
    bool passphrase_protection;
    bool has_reset_word;
    char reset_word[12];
    bool has_reset_entropy;
    DebugLinkState_reset_entropy_t reset_entropy;
    bool has_recovery_fake_word;
    char recovery_fake_word[12];
    bool has_recovery_word_pos;
    uint32_t recovery_word_pos;
    bool has_reset_word_pos;
    uint32_t reset_word_pos;
/* @@protoc_insertion_point(struct:DebugLinkState) */
} DebugLinkState;

typedef PB_BYTES_ARRAY_T(65) ECDHSessionKey_session_key_t;
typedef struct _ECDHSessionKey {
    bool has_session_key;
    ECDHSessionKey_session_key_t session_key;
/* @@protoc_insertion_point(struct:ECDHSessionKey) */
} ECDHSessionKey;

typedef PB_BYTES_ARRAY_T(1024) Entropy_entropy_t;
typedef struct _Entropy {
    Entropy_entropy_t entropy;
/* @@protoc_insertion_point(struct:Entropy) */
} Entropy;

typedef PB_BYTES_ARRAY_T(128) EntropyAck_entropy_t;
typedef struct _EntropyAck {
    bool has_entropy;
    EntropyAck_entropy_t entropy;
/* @@protoc_insertion_point(struct:EntropyAck) */
} EntropyAck;

typedef PB_BYTES_ARRAY_T(20) EthereumAddress_address_t;
typedef struct _EthereumAddress {
    EthereumAddress_address_t address;
/* @@protoc_insertion_point(struct:EthereumAddress) */
} EthereumAddress;

typedef struct _EthereumGetAddress {
    pb_size_t address_n_count;
    uint32_t address_n[8];
    bool has_show_display;
    bool show_display;
/* @@protoc_insertion_point(struct:EthereumGetAddress) */
} EthereumGetAddress;

typedef PB_BYTES_ARRAY_T(20) EthereumMessageSignature_address_t;
typedef PB_BYTES_ARRAY_T(65) EthereumMessageSignature_signature_t;
typedef struct _EthereumMessageSignature {
    bool has_address;
    EthereumMessageSignature_address_t address;
    bool has_signature;
    EthereumMessageSignature_signature_t signature;
/* @@protoc_insertion_point(struct:EthereumMessageSignature) */
} EthereumMessageSignature;

typedef PB_BYTES_ARRAY_T(1024) EthereumSignMessage_message_t;
typedef struct _EthereumSignMessage {
    pb_size_t address_n_count;
    uint32_t address_n[8];
    EthereumSignMessage_message_t message;
/* @@protoc_insertion_point(struct:EthereumSignMessage) */
} EthereumSignMessage;

typedef PB_BYTES_ARRAY_T(32) EthereumSignTx_nonce_t;
typedef PB_BYTES_ARRAY_T(32) EthereumSignTx_gas_price_t;
typedef PB_BYTES_ARRAY_T(32) EthereumSignTx_gas_limit_t;
typedef PB_BYTES_ARRAY_T(20) EthereumSignTx_to_t;
typedef PB_BYTES_ARRAY_T(32) EthereumSignTx_value_t;
typedef PB_BYTES_ARRAY_T(1024) EthereumSignTx_data_initial_chunk_t;
typedef struct _EthereumSignTx {
    pb_size_t address_n_count;
    uint32_t address_n[8];
    bool has_nonce;
    EthereumSignTx_nonce_t nonce;
    bool has_gas_price;
    EthereumSignTx_gas_price_t gas_price;
    bool has_gas_limit;
    EthereumSignTx_gas_limit_t gas_limit;
    bool has_to;
    EthereumSignTx_to_t to;
    bool has_value;
    EthereumSignTx_value_t value;
    bool has_data_initial_chunk;
    EthereumSignTx_data_initial_chunk_t data_initial_chunk;
    bool has_data_length;
    uint32_t data_length;
    bool has_chain_id;
    uint32_t chain_id;
    bool has_tx_type;
    uint32_t tx_type;
/* @@protoc_insertion_point(struct:EthereumSignTx) */
} EthereumSignTx;

typedef PB_BYTES_ARRAY_T(1024) EthereumTxAck_data_chunk_t;
typedef struct _EthereumTxAck {
    bool has_data_chunk;
    EthereumTxAck_data_chunk_t data_chunk;
/* @@protoc_insertion_point(struct:EthereumTxAck) */
} EthereumTxAck;

typedef PB_BYTES_ARRAY_T(32) EthereumTxRequest_signature_r_t;
typedef PB_BYTES_ARRAY_T(32) EthereumTxRequest_signature_s_t;
typedef struct _EthereumTxRequest {
    bool has_data_length;
    uint32_t data_length;
    bool has_signature_v;
    uint32_t signature_v;
    bool has_signature_r;
    EthereumTxRequest_signature_r_t signature_r;
    bool has_signature_s;
    EthereumTxRequest_signature_s_t signature_s;
/* @@protoc_insertion_point(struct:EthereumTxRequest) */
} EthereumTxRequest;

typedef PB_BYTES_ARRAY_T(20) EthereumVerifyMessage_address_t;
typedef PB_BYTES_ARRAY_T(65) EthereumVerifyMessage_signature_t;
typedef PB_BYTES_ARRAY_T(1024) EthereumVerifyMessage_message_t;
typedef struct _EthereumVerifyMessage {
    bool has_address;
    EthereumVerifyMessage_address_t address;
    bool has_signature;
    EthereumVerifyMessage_signature_t signature;
    bool has_message;
    EthereumVerifyMessage_message_t message;
/* @@protoc_insertion_point(struct:EthereumVerifyMessage) */
} EthereumVerifyMessage;

typedef struct _Failure {
    bool has_code;
    FailureType code;
    bool has_message;
    char message[256];
/* @@protoc_insertion_point(struct:Failure) */
} Failure;

typedef PB_BYTES_ARRAY_T(20) Features_revision_t;
typedef PB_BYTES_ARRAY_T(32) Features_bootloader_hash_t;
typedef PB_BYTES_ARRAY_T(32) Features_fw_vendor_keys_t;
typedef struct _Features {
    bool has_vendor;
    char vendor[33];
    bool has_major_version;
    uint32_t major_version;
    bool has_minor_version;
    uint32_t minor_version;
    bool has_patch_version;
    uint32_t patch_version;
    bool has_bootloader_mode;
    bool bootloader_mode;
    bool has_device_id;
    char device_id[25];
    bool has_pin_protection;
    bool pin_protection;
    bool has_passphrase_protection;
    bool passphrase_protection;
    bool has_language;
    char language[17];
    bool has_label;
    char label[33];
    bool has_initialized;
    bool initialized;
    bool has_revision;
    Features_revision_t revision;
    bool has_bootloader_hash;
    Features_bootloader_hash_t bootloader_hash;
    bool has_imported;
    bool imported;
    bool has_pin_cached;
    bool pin_cached;
    bool has_passphrase_cached;
    bool passphrase_cached;
    bool has_firmware_present;
    bool firmware_present;
    bool has_needs_backup;
    bool needs_backup;
    bool has_flags;
    uint32_t flags;
    bool has_model;
    char model[17];
    bool has_fw_major;
    uint32_t fw_major;
    bool has_fw_minor;
    uint32_t fw_minor;
    bool has_fw_patch;
    uint32_t fw_patch;
    bool has_fw_vendor;
    char fw_vendor[256];
    bool has_fw_vendor_keys;
    Features_fw_vendor_keys_t fw_vendor_keys;
    bool has_unfinished_backup;
    bool unfinished_backup;
/* @@protoc_insertion_point(struct:Features) */
} Features;

typedef struct _GetAddress {
    pb_size_t address_n_count;
    uint32_t address_n[8];
    bool has_coin_name;
    char coin_name[21];
    bool has_show_display;
    bool show_display;
    bool has_multisig;
    MultisigRedeemScriptType multisig;
    bool has_script_type;
    InputScriptType script_type;
/* @@protoc_insertion_point(struct:GetAddress) */
} GetAddress;

typedef PB_BYTES_ARRAY_T(65) GetECDHSessionKey_peer_public_key_t;
typedef struct _GetECDHSessionKey {
    bool has_identity;
    IdentityType identity;
    bool has_peer_public_key;
    GetECDHSessionKey_peer_public_key_t peer_public_key;
    bool has_ecdsa_curve_name;
    char ecdsa_curve_name[32];
/* @@protoc_insertion_point(struct:GetECDHSessionKey) */
} GetECDHSessionKey;

typedef struct _GetEntropy {
    uint32_t size;
/* @@protoc_insertion_point(struct:GetEntropy) */
} GetEntropy;

typedef struct _GetPublicKey {
    pb_size_t address_n_count;
    uint32_t address_n[8];
    bool has_ecdsa_curve_name;
    char ecdsa_curve_name[32];
    bool has_show_display;
    bool show_display;
    bool has_coin_name;
    char coin_name[21];
/* @@protoc_insertion_point(struct:GetPublicKey) */
} GetPublicKey;

typedef PB_BYTES_ARRAY_T(64) Initialize_state_t;
typedef struct _Initialize {
    bool has_state;
    Initialize_state_t state;
    bool has_skip_passphrase;
    bool skip_passphrase;
/* @@protoc_insertion_point(struct:Initialize) */
} Initialize;

typedef struct _LoadDevice {
    bool has_mnemonic;
    char mnemonic[241];
    bool has_node;
    HDNodeType node;
    bool has_pin;
    char pin[10];
    bool has_passphrase_protection;
    bool passphrase_protection;
    bool has_language;
    char language[17];
    bool has_label;
    char label[33];
    bool has_skip_checksum;
    bool skip_checksum;
    bool has_u2f_counter;
    uint32_t u2f_counter;
/* @@protoc_insertion_point(struct:LoadDevice) */
} LoadDevice;

typedef PB_BYTES_ARRAY_T(65) MessageSignature_signature_t;
typedef struct _MessageSignature {
    bool has_address;
    char address[130];
    bool has_signature;
    MessageSignature_signature_t signature;
/* @@protoc_insertion_point(struct:MessageSignature) */
} MessageSignature;

typedef struct _NEMAddress {
    char address[41];
/* @@protoc_insertion_point(struct:NEMAddress) */
} NEMAddress;

typedef PB_BYTES_ARRAY_T(32) NEMDecryptMessage_public_key_t;
typedef PB_BYTES_ARRAY_T(1072) NEMDecryptMessage_payload_t;
typedef struct _NEMDecryptMessage {
    pb_size_t address_n_count;
    uint32_t address_n[8];
    bool has_network;
    uint32_t network;
    bool has_public_key;
    NEMDecryptMessage_public_key_t public_key;
    bool has_payload;
    NEMDecryptMessage_payload_t payload;
/* @@protoc_insertion_point(struct:NEMDecryptMessage) */
} NEMDecryptMessage;

typedef PB_BYTES_ARRAY_T(1024) NEMDecryptedMessage_payload_t;
typedef struct _NEMDecryptedMessage {
    bool has_payload;
    NEMDecryptedMessage_payload_t payload;
/* @@protoc_insertion_point(struct:NEMDecryptedMessage) */
} NEMDecryptedMessage;

typedef struct _NEMGetAddress {
    pb_size_t address_n_count;
    uint32_t address_n[8];
    bool has_network;
    uint32_t network;
    bool has_show_display;
    bool show_display;
/* @@protoc_insertion_point(struct:NEMGetAddress) */
} NEMGetAddress;

typedef struct _NEMSignTx {
    bool has_transaction;
    NEMTransactionCommon transaction;
    bool has_multisig;
    NEMTransactionCommon multisig;
    bool has_transfer;
    NEMTransfer transfer;
    bool has_cosigning;
    bool cosigning;
    bool has_provision_namespace;
    NEMProvisionNamespace provision_namespace;
    bool has_mosaic_creation;
    NEMMosaicCreation mosaic_creation;
    bool has_supply_change;
    NEMMosaicSupplyChange supply_change;
    bool has_aggregate_modification;
    NEMAggregateModification aggregate_modification;
    bool has_importance_transfer;
    NEMImportanceTransfer importance_transfer;
/* @@protoc_insertion_point(struct:NEMSignTx) */
} NEMSignTx;

typedef PB_BYTES_ARRAY_T(2048) NEMSignedTx_data_t;
typedef PB_BYTES_ARRAY_T(64) NEMSignedTx_signature_t;
typedef struct _NEMSignedTx {
    bool has_data;
    NEMSignedTx_data_t data;
    bool has_signature;
    NEMSignedTx_signature_t signature;
/* @@protoc_insertion_point(struct:NEMSignedTx) */
} NEMSignedTx;

typedef PB_BYTES_ARRAY_T(64) PassphraseAck_state_t;
typedef struct _PassphraseAck {
    bool has_passphrase;
    char passphrase[51];
    bool has_state;
    PassphraseAck_state_t state;
/* @@protoc_insertion_point(struct:PassphraseAck) */
} PassphraseAck;

typedef struct _PassphraseRequest {
    bool has_on_device;
    bool on_device;
/* @@protoc_insertion_point(struct:PassphraseRequest) */
} PassphraseRequest;

typedef PB_BYTES_ARRAY_T(64) PassphraseStateRequest_state_t;
typedef struct _PassphraseStateRequest {
    bool has_state;
    PassphraseStateRequest_state_t state;
/* @@protoc_insertion_point(struct:PassphraseStateRequest) */
} PassphraseStateRequest;

typedef struct _PinMatrixAck {
    char pin[10];
/* @@protoc_insertion_point(struct:PinMatrixAck) */
} PinMatrixAck;

typedef struct _PinMatrixRequest {
    bool has_type;
    PinMatrixRequestType type;
/* @@protoc_insertion_point(struct:PinMatrixRequest) */
} PinMatrixRequest;

typedef struct _Ping {
    bool has_message;
    char message[256];
    bool has_button_protection;
    bool button_protection;
    bool has_pin_protection;
    bool pin_protection;
    bool has_passphrase_protection;
    bool passphrase_protection;
/* @@protoc_insertion_point(struct:Ping) */
} Ping;

typedef struct _PublicKey {
    HDNodeType node;
    bool has_xpub;
    char xpub[113];
/* @@protoc_insertion_point(struct:PublicKey) */
} PublicKey;

typedef struct _RecoveryDevice {
    bool has_word_count;
    uint32_t word_count;
    bool has_passphrase_protection;
    bool passphrase_protection;
    bool has_pin_protection;
    bool pin_protection;
    bool has_language;
    char language[17];
    bool has_label;
    char label[33];
    bool has_enforce_wordlist;
    bool enforce_wordlist;
    bool has_type;
    uint32_t type;
    bool has_u2f_counter;
    uint32_t u2f_counter;
    bool has_dry_run;
    bool dry_run;
/* @@protoc_insertion_point(struct:RecoveryDevice) */
} RecoveryDevice;

typedef struct _ResetDevice {
    bool has_display_random;
    bool display_random;
    bool has_strength;
    uint32_t strength;
    bool has_passphrase_protection;
    bool passphrase_protection;
    bool has_pin_protection;
    bool pin_protection;
    bool has_language;
    char language[17];
    bool has_label;
    char label[33];
    bool has_u2f_counter;
    uint32_t u2f_counter;
    bool has_skip_backup;
    bool skip_backup;
/* @@protoc_insertion_point(struct:ResetDevice) */
} ResetDevice;

typedef struct _SetU2FCounter {
    bool has_u2f_counter;
    uint32_t u2f_counter;
/* @@protoc_insertion_point(struct:SetU2FCounter) */
} SetU2FCounter;

typedef PB_BYTES_ARRAY_T(256) SignIdentity_challenge_hidden_t;
typedef struct _SignIdentity {
    bool has_identity;
    IdentityType identity;
    bool has_challenge_hidden;
    SignIdentity_challenge_hidden_t challenge_hidden;
    bool has_challenge_visual;
    char challenge_visual[256];
    bool has_ecdsa_curve_name;
    char ecdsa_curve_name[32];
/* @@protoc_insertion_point(struct:SignIdentity) */
} SignIdentity;

typedef PB_BYTES_ARRAY_T(1024) SignMessage_message_t;
typedef struct _SignMessage {
    pb_size_t address_n_count;
    uint32_t address_n[8];
    SignMessage_message_t message;
    bool has_coin_name;
    char coin_name[21];
    bool has_script_type;
    InputScriptType script_type;
/* @@protoc_insertion_point(struct:SignMessage) */
} SignMessage;

typedef struct _SignTx {
    uint32_t outputs_count;
    uint32_t inputs_count;
    bool has_coin_name;
    char coin_name[21];
    bool has_version;
    uint32_t version;
    bool has_lock_time;
    uint32_t lock_time;
    bool has_decred_expiry;
    uint32_t decred_expiry;
/* @@protoc_insertion_point(struct:SignTx) */
} SignTx;

typedef PB_BYTES_ARRAY_T(33) SignedIdentity_public_key_t;
typedef PB_BYTES_ARRAY_T(65) SignedIdentity_signature_t;
typedef struct _SignedIdentity {
    bool has_address;
    char address[130];
    bool has_public_key;
    SignedIdentity_public_key_t public_key;
    bool has_signature;
    SignedIdentity_signature_t signature;
/* @@protoc_insertion_point(struct:SignedIdentity) */
} SignedIdentity;

typedef PB_BYTES_ARRAY_T(32) StellarAccountMergeOp_source_account_t;
typedef PB_BYTES_ARRAY_T(32) StellarAccountMergeOp_destination_account_t;
typedef struct _StellarAccountMergeOp {
    bool has_source_account;
    StellarAccountMergeOp_source_account_t source_account;
    bool has_destination_account;
    StellarAccountMergeOp_destination_account_t destination_account;
/* @@protoc_insertion_point(struct:StellarAccountMergeOp) */
} StellarAccountMergeOp;

typedef PB_BYTES_ARRAY_T(32) StellarAllowTrustOp_source_account_t;
typedef PB_BYTES_ARRAY_T(32) StellarAllowTrustOp_trusted_account_t;
typedef struct _StellarAllowTrustOp {
    bool has_source_account;
    StellarAllowTrustOp_source_account_t source_account;
    bool has_trusted_account;
    StellarAllowTrustOp_trusted_account_t trusted_account;
    bool has_asset_type;
    uint32_t asset_type;
    bool has_asset_code;
    char asset_code[13];
    bool has_is_authorized;
    uint32_t is_authorized;
/* @@protoc_insertion_point(struct:StellarAllowTrustOp) */
} StellarAllowTrustOp;

typedef PB_BYTES_ARRAY_T(32) StellarBumpSequenceOp_source_account_t;
typedef struct _StellarBumpSequenceOp {
    bool has_source_account;
    StellarBumpSequenceOp_source_account_t source_account;
    bool has_bump_to;
    uint64_t bump_to;
/* @@protoc_insertion_point(struct:StellarBumpSequenceOp) */
} StellarBumpSequenceOp;

typedef PB_BYTES_ARRAY_T(32) StellarChangeTrustOp_source_account_t;
typedef struct _StellarChangeTrustOp {
    bool has_source_account;
    StellarChangeTrustOp_source_account_t source_account;
    bool has_asset;
    StellarAssetType asset;
    bool has_limit;
    uint64_t limit;
/* @@protoc_insertion_point(struct:StellarChangeTrustOp) */
} StellarChangeTrustOp;

typedef PB_BYTES_ARRAY_T(32) StellarCreateAccountOp_source_account_t;
typedef PB_BYTES_ARRAY_T(32) StellarCreateAccountOp_new_account_t;
typedef struct _StellarCreateAccountOp {
    bool has_source_account;
    StellarCreateAccountOp_source_account_t source_account;
    bool has_new_account;
    StellarCreateAccountOp_new_account_t new_account;
    bool has_starting_balance;
    int64_t starting_balance;
/* @@protoc_insertion_point(struct:StellarCreateAccountOp) */
} StellarCreateAccountOp;

typedef PB_BYTES_ARRAY_T(32) StellarCreatePassiveOfferOp_source_account_t;
typedef struct _StellarCreatePassiveOfferOp {
    bool has_source_account;
    StellarCreatePassiveOfferOp_source_account_t source_account;
    bool has_selling_asset;
    StellarAssetType selling_asset;
    bool has_buying_asset;
    StellarAssetType buying_asset;
    bool has_amount;
    int64_t amount;
    bool has_price_n;
    uint32_t price_n;
    bool has_price_d;
    uint32_t price_d;
/* @@protoc_insertion_point(struct:StellarCreatePassiveOfferOp) */
} StellarCreatePassiveOfferOp;

typedef struct _StellarGetPublicKey {
    pb_size_t address_n_count;
    uint32_t address_n[10];
/* @@protoc_insertion_point(struct:StellarGetPublicKey) */
} StellarGetPublicKey;

typedef PB_BYTES_ARRAY_T(32) StellarManageDataOp_source_account_t;
typedef PB_BYTES_ARRAY_T(65) StellarManageDataOp_value_t;
typedef struct _StellarManageDataOp {
    bool has_source_account;
    StellarManageDataOp_source_account_t source_account;
    bool has_key;
    char key[65];
    bool has_value;
    StellarManageDataOp_value_t value;
/* @@protoc_insertion_point(struct:StellarManageDataOp) */
} StellarManageDataOp;

typedef PB_BYTES_ARRAY_T(32) StellarManageOfferOp_source_account_t;
typedef struct _StellarManageOfferOp {
    bool has_source_account;
    StellarManageOfferOp_source_account_t source_account;
    bool has_selling_asset;
    StellarAssetType selling_asset;
    bool has_buying_asset;
    StellarAssetType buying_asset;
    bool has_amount;
    int64_t amount;
    bool has_price_n;
    uint32_t price_n;
    bool has_price_d;
    uint32_t price_d;
    bool has_offer_id;
    uint64_t offer_id;
/* @@protoc_insertion_point(struct:StellarManageOfferOp) */
} StellarManageOfferOp;

typedef PB_BYTES_ARRAY_T(32) StellarPathPaymentOp_source_account_t;
typedef PB_BYTES_ARRAY_T(32) StellarPathPaymentOp_destination_account_t;
typedef struct _StellarPathPaymentOp {
    bool has_source_account;
    StellarPathPaymentOp_source_account_t source_account;
    bool has_send_asset;
    StellarAssetType send_asset;
    bool has_send_max;
    int64_t send_max;
    bool has_destination_account;
    StellarPathPaymentOp_destination_account_t destination_account;
    bool has_destination_asset;
    StellarAssetType destination_asset;
    bool has_destination_amount;
    int64_t destination_amount;
    pb_size_t paths_count;
    StellarAssetType paths[5];
/* @@protoc_insertion_point(struct:StellarPathPaymentOp) */
} StellarPathPaymentOp;

typedef PB_BYTES_ARRAY_T(32) StellarPaymentOp_source_account_t;
typedef PB_BYTES_ARRAY_T(32) StellarPaymentOp_destination_account_t;
typedef struct _StellarPaymentOp {
    bool has_source_account;
    StellarPaymentOp_source_account_t source_account;
    bool has_destination_account;
    StellarPaymentOp_destination_account_t destination_account;
    bool has_asset;
    StellarAssetType asset;
    bool has_amount;
    int64_t amount;
/* @@protoc_insertion_point(struct:StellarPaymentOp) */
} StellarPaymentOp;

typedef PB_BYTES_ARRAY_T(32) StellarPublicKey_public_key_t;
typedef struct _StellarPublicKey {
    bool has_public_key;
    StellarPublicKey_public_key_t public_key;
/* @@protoc_insertion_point(struct:StellarPublicKey) */
} StellarPublicKey;

typedef PB_BYTES_ARRAY_T(32) StellarSetOptionsOp_source_account_t;
typedef PB_BYTES_ARRAY_T(32) StellarSetOptionsOp_inflation_destination_account_t;
typedef PB_BYTES_ARRAY_T(32) StellarSetOptionsOp_signer_key_t;
typedef struct _StellarSetOptionsOp {
    bool has_source_account;
    StellarSetOptionsOp_source_account_t source_account;
    bool has_inflation_destination_account;
    StellarSetOptionsOp_inflation_destination_account_t inflation_destination_account;
    bool has_clear_flags;
    uint32_t clear_flags;
    bool has_set_flags;
    uint32_t set_flags;
    bool has_master_weight;
    uint32_t master_weight;
    bool has_low_threshold;
    uint32_t low_threshold;
    bool has_medium_threshold;
    uint32_t medium_threshold;
    bool has_high_threshold;
    uint32_t high_threshold;
    bool has_home_domain;
    char home_domain[33];
    bool has_signer_type;
    uint32_t signer_type;
    bool has_signer_key;
    StellarSetOptionsOp_signer_key_t signer_key;
    bool has_signer_weight;
    uint32_t signer_weight;
/* @@protoc_insertion_point(struct:StellarSetOptionsOp) */
} StellarSetOptionsOp;

typedef PB_BYTES_ARRAY_T(32) StellarSignTx_source_account_t;
typedef PB_BYTES_ARRAY_T(32) StellarSignTx_memo_hash_t;
typedef struct _StellarSignTx {
    bool has_protocol_version;
    uint32_t protocol_version;
    pb_size_t address_n_count;
    uint32_t address_n[10];
    bool has_network_passphrase;
    char network_passphrase[1024];
    bool has_source_account;
    StellarSignTx_source_account_t source_account;
    bool has_fee;
    uint32_t fee;
    bool has_sequence_number;
    uint64_t sequence_number;
    bool has_timebounds_start;
    uint32_t timebounds_start;
    bool has_timebounds_end;
    uint32_t timebounds_end;
    bool has_memo_type;
    uint32_t memo_type;
    bool has_memo_text;
    char memo_text[29];
    bool has_memo_id;
    uint64_t memo_id;
    bool has_memo_hash;
    StellarSignTx_memo_hash_t memo_hash;
    bool has_num_operations;
    uint32_t num_operations;
/* @@protoc_insertion_point(struct:StellarSignTx) */
} StellarSignTx;

typedef PB_BYTES_ARRAY_T(32) StellarSignedTx_public_key_t;
typedef PB_BYTES_ARRAY_T(64) StellarSignedTx_signature_t;
typedef struct _StellarSignedTx {
    bool has_public_key;
    StellarSignedTx_public_key_t public_key;
    bool has_signature;
    StellarSignedTx_signature_t signature;
/* @@protoc_insertion_point(struct:StellarSignedTx) */
} StellarSignedTx;

typedef struct _Success {
    bool has_message;
    char message[256];
/* @@protoc_insertion_point(struct:Success) */
} Success;

typedef struct _TxAck {
    bool has_tx;
    TransactionType tx;
/* @@protoc_insertion_point(struct:TxAck) */
} TxAck;

typedef struct _TxRequest {
    bool has_request_type;
    RequestType request_type;
    bool has_details;
    TxRequestDetailsType details;
    bool has_serialized;
    TxRequestSerializedType serialized;
/* @@protoc_insertion_point(struct:TxRequest) */
} TxRequest;

typedef PB_BYTES_ARRAY_T(65) VerifyMessage_signature_t;
typedef PB_BYTES_ARRAY_T(1024) VerifyMessage_message_t;
typedef struct _VerifyMessage {
    bool has_address;
    char address[130];
    bool has_signature;
    VerifyMessage_signature_t signature;
    bool has_message;
    VerifyMessage_message_t message;
    bool has_coin_name;
    char coin_name[21];
/* @@protoc_insertion_point(struct:VerifyMessage) */
} VerifyMessage;

typedef struct _WordAck {
    char word[12];
/* @@protoc_insertion_point(struct:WordAck) */
} WordAck;

typedef struct _WordRequest {
    bool has_type;
    WordRequestType type;
/* @@protoc_insertion_point(struct:WordRequest) */
} WordRequest;

/* Default values for struct fields */
extern const char GetPublicKey_coin_name_default[21];
extern const char GetAddress_coin_name_default[21];
extern const InputScriptType GetAddress_script_type_default;
extern const char LoadDevice_language_default[17];
extern const uint32_t ResetDevice_strength_default;
extern const char ResetDevice_language_default[17];
extern const char RecoveryDevice_language_default[17];
extern const char SignMessage_coin_name_default[21];
extern const InputScriptType SignMessage_script_type_default;
extern const char VerifyMessage_coin_name_default[21];
extern const char SignTx_coin_name_default[21];
extern const uint32_t SignTx_version_default;
extern const uint32_t SignTx_lock_time_default;

/* Initializer values for message structs */
#define Initialize_init_default                  {false, {0, {0}}, false, 0}
#define GetFeatures_init_default                 {0}
#define Features_init_default                    {false, "", false, 0, false, 0, false, 0, false, 0, false, "", false, 0, false, 0, false, "", false, "", false, 0, false, {0, {0}}, false, {0, {0}}, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, "", false, 0, false, 0, false, 0, false, "", false, {0, {0}}, false, 0}
#define ClearSession_init_default                {0}
#define ApplySettings_init_default               {false, "", false, "", false, 0, false, {0, {0}}, false, (PassphraseSourceType)0, false, 0}
#define ApplyFlags_init_default                  {false, 0}
#define ChangePin_init_default                   {false, 0}
#define Ping_init_default                        {false, "", false, 0, false, 0, false, 0}
#define Success_init_default                     {false, ""}
#define Failure_init_default                     {false, (FailureType)0, false, ""}
#define ButtonRequest_init_default               {false, (ButtonRequestType)0, false, ""}
#define ButtonAck_init_default                   {0}
#define PinMatrixRequest_init_default            {false, (PinMatrixRequestType)0}
#define PinMatrixAck_init_default                {""}
#define Cancel_init_default                      {0}
#define PassphraseRequest_init_default           {false, 0}
#define PassphraseAck_init_default               {false, "", false, {0, {0}}}
#define PassphraseStateRequest_init_default      {false, {0, {0}}}
#define PassphraseStateAck_init_default          {0}
#define GetEntropy_init_default                  {0}
#define Entropy_init_default                     {{0, {0}}}
#define GetPublicKey_init_default                {0, {0, 0, 0, 0, 0, 0, 0, 0}, false, "", false, 0, false, "Bitcoin"}
#define PublicKey_init_default                   {HDNodeType_init_default, false, ""}
#define GetAddress_init_default                  {0, {0, 0, 0, 0, 0, 0, 0, 0}, false, "Bitcoin", false, 0, false, MultisigRedeemScriptType_init_default, false, InputScriptType_SPENDADDRESS}
#define EthereumGetAddress_init_default          {0, {0, 0, 0, 0, 0, 0, 0, 0}, false, 0}
#define Address_init_default                     {""}
#define EthereumAddress_init_default             {{0, {0}}}
#define WipeDevice_init_default                  {0}
#define LoadDevice_init_default                  {false, "", false, HDNodeType_init_default, false, "", false, 0, false, "english", false, "", false, 0, false, 0}
#define ResetDevice_init_default                 {false, 0, false, 256u, false, 0, false, 0, false, "english", false, "", false, 0, false, 0}
#define BackupDevice_init_default                {0}
#define EntropyRequest_init_default              {0}
#define EntropyAck_init_default                  {false, {0, {0}}}
#define RecoveryDevice_init_default              {false, 0, false, 0, false, 0, false, "english", false, "", false, 0, false, 0, false, 0, false, 0}
#define WordRequest_init_default                 {false, (WordRequestType)0}
#define WordAck_init_default                     {""}
#define SignMessage_init_default                 {0, {0, 0, 0, 0, 0, 0, 0, 0}, {0, {0}}, false, "Bitcoin", false, InputScriptType_SPENDADDRESS}
#define VerifyMessage_init_default               {false, "", false, {0, {0}}, false, {0, {0}}, false, "Bitcoin"}
#define MessageSignature_init_default            {false, "", false, {0, {0}}}
#define CipherKeyValue_init_default              {0, {0, 0, 0, 0, 0, 0, 0, 0}, false, "", false, {0, {0}}, false, 0, false, 0, false, 0, false, {0, {0}}}
#define CipheredKeyValue_init_default            {false, {0, {0}}}
#define SignTx_init_default                      {0, 0, false, "Bitcoin", false, 1u, false, 0u, false, 0}
#define TxRequest_init_default                   {false, (RequestType)0, false, TxRequestDetailsType_init_default, false, TxRequestSerializedType_init_default}
#define TxAck_init_default                       {false, TransactionType_init_default}
#define EthereumSignTx_init_default              {0, {0, 0, 0, 0, 0, 0, 0, 0}, false, {0, {0}}, false, {0, {0}}, false, {0, {0}}, false, {0, {0}}, false, {0, {0}}, false, {0, {0}}, false, 0, false, 0, false, 0}
#define EthereumTxRequest_init_default           {false, 0, false, 0, false, {0, {0}}, false, {0, {0}}}
#define EthereumTxAck_init_default               {false, {0, {0}}}
#define EthereumSignMessage_init_default         {0, {0, 0, 0, 0, 0, 0, 0, 0}, {0, {0}}}
#define EthereumVerifyMessage_init_default       {false, {0, {0}}, false, {0, {0}}, false, {0, {0}}}
#define EthereumMessageSignature_init_default    {false, {0, {0}}, false, {0, {0}}}
#define SignIdentity_init_default                {false, IdentityType_init_default, false, {0, {0}}, false, "", false, ""}
#define SignedIdentity_init_default              {false, "", false, {0, {0}}, false, {0, {0}}}
#define GetECDHSessionKey_init_default           {false, IdentityType_init_default, false, {0, {0}}, false, ""}
#define ECDHSessionKey_init_default              {false, {0, {0}}}
#define SetU2FCounter_init_default               {false, 0}
#define NEMGetAddress_init_default               {0, {0, 0, 0, 0, 0, 0, 0, 0}, false, 0, false, 0}
#define NEMAddress_init_default                  {""}
#define NEMSignTx_init_default                   {false, NEMTransactionCommon_init_default, false, NEMTransactionCommon_init_default, false, NEMTransfer_init_default, false, 0, false, NEMProvisionNamespace_init_default, false, NEMMosaicCreation_init_default, false, NEMMosaicSupplyChange_init_default, false, NEMAggregateModification_init_default, false, NEMImportanceTransfer_init_default}
#define NEMSignedTx_init_default                 {false, {0, {0}}, false, {0, {0}}}
#define NEMDecryptMessage_init_default           {0, {0, 0, 0, 0, 0, 0, 0, 0}, false, 0, false, {0, {0}}, false, {0, {0}}}
#define NEMDecryptedMessage_init_default         {false, {0, {0}}}
#define CosiCommit_init_default                  {0, {0, 0, 0, 0, 0, 0, 0, 0}, false, {0, {0}}}
#define CosiCommitment_init_default              {false, {0, {0}}, false, {0, {0}}}
#define CosiSign_init_default                    {0, {0, 0, 0, 0, 0, 0, 0, 0}, false, {0, {0}}, false, {0, {0}}, false, {0, {0}}}
#define CosiSignature_init_default               {false, {0, {0}}}
#define StellarGetPublicKey_init_default         {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define StellarPublicKey_init_default            {false, {0, {0}}}
#define StellarSignTx_init_default               {false, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, false, "", false, {0, {0}}, false, 0, false, 0, false, 0, false, 0, false, 0, false, "", false, 0, false, {0, {0}}, false, 0}
#define StellarTxOpRequest_init_default          {0}
#define StellarPaymentOp_init_default            {false, {0, {0}}, false, {0, {0}}, false, StellarAssetType_init_default, false, 0}
#define StellarCreateAccountOp_init_default      {false, {0, {0}}, false, {0, {0}}, false, 0}
#define StellarPathPaymentOp_init_default        {false, {0, {0}}, false, StellarAssetType_init_default, false, 0, false, {0, {0}}, false, StellarAssetType_init_default, false, 0, 0, {StellarAssetType_init_default, StellarAssetType_init_default, StellarAssetType_init_default, StellarAssetType_init_default, StellarAssetType_init_default}}
#define StellarManageOfferOp_init_default        {false, {0, {0}}, false, StellarAssetType_init_default, false, StellarAssetType_init_default, false, 0, false, 0, false, 0, false, 0}
#define StellarCreatePassiveOfferOp_init_default {false, {0, {0}}, false, StellarAssetType_init_default, false, StellarAssetType_init_default, false, 0, false, 0, false, 0}
#define StellarSetOptionsOp_init_default         {false, {0, {0}}, false, {0, {0}}, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, "", false, 0, false, {0, {0}}, false, 0}
#define StellarChangeTrustOp_init_default        {false, {0, {0}}, false, StellarAssetType_init_default, false, 0}
#define StellarAllowTrustOp_init_default         {false, {0, {0}}, false, {0, {0}}, false, 0, false, "", false, 0}
#define StellarAccountMergeOp_init_default       {false, {0, {0}}, false, {0, {0}}}
#define StellarManageDataOp_init_default         {false, {0, {0}}, false, "", false, {0, {0}}}
#define StellarBumpSequenceOp_init_default       {false, {0, {0}}, false, 0}
#define StellarSignedTx_init_default             {false, {0, {0}}, false, {0, {0}}}
#define DebugLinkDecision_init_default           {false, 0, false, 0, false, ""}
#define DebugLinkGetState_init_default           {0}
#define DebugLinkState_init_default              {false, {0, {0}}, false, "", false, "", false, "", false, HDNodeType_init_default, false, 0, false, "", false, {0, {0}}, false, "", false, 0, false, 0}
#define DebugLinkStop_init_default               {0}
#define DebugLinkLog_init_default                {false, 0, false, "", false, ""}
#define DebugLinkMemoryRead_init_default         {false, 0, false, 0}
#define DebugLinkMemory_init_default             {false, {0, {0}}}
#define DebugLinkMemoryWrite_init_default        {false, 0, false, {0, {0}}, false, 0}
#define DebugLinkFlashErase_init_default         {false, 0}
#define Initialize_init_zero                     {false, {0, {0}}, false, 0}
#define GetFeatures_init_zero                    {0}
#define Features_init_zero                       {false, "", false, 0, false, 0, false, 0, false, 0, false, "", false, 0, false, 0, false, "", false, "", false, 0, false, {0, {0}}, false, {0, {0}}, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, "", false, 0, false, 0, false, 0, false, "", false, {0, {0}}, false, 0}
#define ClearSession_init_zero                   {0}
#define ApplySettings_init_zero                  {false, "", false, "", false, 0, false, {0, {0}}, false, (PassphraseSourceType)0, false, 0}
#define ApplyFlags_init_zero                     {false, 0}
#define ChangePin_init_zero                      {false, 0}
#define Ping_init_zero                           {false, "", false, 0, false, 0, false, 0}
#define Success_init_zero                        {false, ""}
#define Failure_init_zero                        {false, (FailureType)0, false, ""}
#define ButtonRequest_init_zero                  {false, (ButtonRequestType)0, false, ""}
#define ButtonAck_init_zero                      {0}
#define PinMatrixRequest_init_zero               {false, (PinMatrixRequestType)0}
#define PinMatrixAck_init_zero                   {""}
#define Cancel_init_zero                         {0}
#define PassphraseRequest_init_zero              {false, 0}
#define PassphraseAck_init_zero                  {false, "", false, {0, {0}}}
#define PassphraseStateRequest_init_zero         {false, {0, {0}}}
#define PassphraseStateAck_init_zero             {0}
#define GetEntropy_init_zero                     {0}
#define Entropy_init_zero                        {{0, {0}}}
#define GetPublicKey_init_zero                   {0, {0, 0, 0, 0, 0, 0, 0, 0}, false, "", false, 0, false, ""}
#define PublicKey_init_zero                      {HDNodeType_init_zero, false, ""}
#define GetAddress_init_zero                     {0, {0, 0, 0, 0, 0, 0, 0, 0}, false, "", false, 0, false, MultisigRedeemScriptType_init_zero, false, (InputScriptType)0}
#define EthereumGetAddress_init_zero             {0, {0, 0, 0, 0, 0, 0, 0, 0}, false, 0}
#define Address_init_zero                        {""}
#define EthereumAddress_init_zero                {{0, {0}}}
#define WipeDevice_init_zero                     {0}
#define LoadDevice_init_zero                     {false, "", false, HDNodeType_init_zero, false, "", false, 0, false, "", false, "", false, 0, false, 0}
#define ResetDevice_init_zero                    {false, 0, false, 0, false, 0, false, 0, false, "", false, "", false, 0, false, 0}
#define BackupDevice_init_zero                   {0}
#define EntropyRequest_init_zero                 {0}
#define EntropyAck_init_zero                     {false, {0, {0}}}
#define RecoveryDevice_init_zero                 {false, 0, false, 0, false, 0, false, "", false, "", false, 0, false, 0, false, 0, false, 0}
#define WordRequest_init_zero                    {false, (WordRequestType)0}
#define WordAck_init_zero                        {""}
#define SignMessage_init_zero                    {0, {0, 0, 0, 0, 0, 0, 0, 0}, {0, {0}}, false, "", false, (InputScriptType)0}
#define VerifyMessage_init_zero                  {false, "", false, {0, {0}}, false, {0, {0}}, false, ""}
#define MessageSignature_init_zero               {false, "", false, {0, {0}}}
#define CipherKeyValue_init_zero                 {0, {0, 0, 0, 0, 0, 0, 0, 0}, false, "", false, {0, {0}}, false, 0, false, 0, false, 0, false, {0, {0}}}
#define CipheredKeyValue_init_zero               {false, {0, {0}}}
#define SignTx_init_zero                         {0, 0, false, "", false, 0, false, 0, false, 0}
#define TxRequest_init_zero                      {false, (RequestType)0, false, TxRequestDetailsType_init_zero, false, TxRequestSerializedType_init_zero}
#define TxAck_init_zero                          {false, TransactionType_init_zero}
#define EthereumSignTx_init_zero                 {0, {0, 0, 0, 0, 0, 0, 0, 0}, false, {0, {0}}, false, {0, {0}}, false, {0, {0}}, false, {0, {0}}, false, {0, {0}}, false, {0, {0}}, false, 0, false, 0, false, 0}
#define EthereumTxRequest_init_zero              {false, 0, false, 0, false, {0, {0}}, false, {0, {0}}}
#define EthereumTxAck_init_zero                  {false, {0, {0}}}
#define EthereumSignMessage_init_zero            {0, {0, 0, 0, 0, 0, 0, 0, 0}, {0, {0}}}
#define EthereumVerifyMessage_init_zero          {false, {0, {0}}, false, {0, {0}}, false, {0, {0}}}
#define EthereumMessageSignature_init_zero       {false, {0, {0}}, false, {0, {0}}}
#define SignIdentity_init_zero                   {false, IdentityType_init_zero, false, {0, {0}}, false, "", false, ""}
#define SignedIdentity_init_zero                 {false, "", false, {0, {0}}, false, {0, {0}}}
#define GetECDHSessionKey_init_zero              {false, IdentityType_init_zero, false, {0, {0}}, false, ""}
#define ECDHSessionKey_init_zero                 {false, {0, {0}}}
#define SetU2FCounter_init_zero                  {false, 0}
#define NEMGetAddress_init_zero                  {0, {0, 0, 0, 0, 0, 0, 0, 0}, false, 0, false, 0}
#define NEMAddress_init_zero                     {""}
#define NEMSignTx_init_zero                      {false, NEMTransactionCommon_init_zero, false, NEMTransactionCommon_init_zero, false, NEMTransfer_init_zero, false, 0, false, NEMProvisionNamespace_init_zero, false, NEMMosaicCreation_init_zero, false, NEMMosaicSupplyChange_init_zero, false, NEMAggregateModification_init_zero, false, NEMImportanceTransfer_init_zero}
#define NEMSignedTx_init_zero                    {false, {0, {0}}, false, {0, {0}}}
#define NEMDecryptMessage_init_zero              {0, {0, 0, 0, 0, 0, 0, 0, 0}, false, 0, false, {0, {0}}, false, {0, {0}}}
#define NEMDecryptedMessage_init_zero            {false, {0, {0}}}
#define CosiCommit_init_zero                     {0, {0, 0, 0, 0, 0, 0, 0, 0}, false, {0, {0}}}
#define CosiCommitment_init_zero                 {false, {0, {0}}, false, {0, {0}}}
#define CosiSign_init_zero                       {0, {0, 0, 0, 0, 0, 0, 0, 0}, false, {0, {0}}, false, {0, {0}}, false, {0, {0}}}
#define CosiSignature_init_zero                  {false, {0, {0}}}
#define StellarGetPublicKey_init_zero            {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define StellarPublicKey_init_zero               {false, {0, {0}}}
#define StellarSignTx_init_zero                  {false, 0, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, false, "", false, {0, {0}}, false, 0, false, 0, false, 0, false, 0, false, 0, false, "", false, 0, false, {0, {0}}, false, 0}
#define StellarTxOpRequest_init_zero             {0}
#define StellarPaymentOp_init_zero               {false, {0, {0}}, false, {0, {0}}, false, StellarAssetType_init_zero, false, 0}
#define StellarCreateAccountOp_init_zero         {false, {0, {0}}, false, {0, {0}}, false, 0}
#define StellarPathPaymentOp_init_zero           {false, {0, {0}}, false, StellarAssetType_init_zero, false, 0, false, {0, {0}}, false, StellarAssetType_init_zero, false, 0, 0, {StellarAssetType_init_zero, StellarAssetType_init_zero, StellarAssetType_init_zero, StellarAssetType_init_zero, StellarAssetType_init_zero}}
#define StellarManageOfferOp_init_zero           {false, {0, {0}}, false, StellarAssetType_init_zero, false, StellarAssetType_init_zero, false, 0, false, 0, false, 0, false, 0}
#define StellarCreatePassiveOfferOp_init_zero    {false, {0, {0}}, false, StellarAssetType_init_zero, false, StellarAssetType_init_zero, false, 0, false, 0, false, 0}
#define StellarSetOptionsOp_init_zero            {false, {0, {0}}, false, {0, {0}}, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, "", false, 0, false, {0, {0}}, false, 0}
#define StellarChangeTrustOp_init_zero           {false, {0, {0}}, false, StellarAssetType_init_zero, false, 0}
#define StellarAllowTrustOp_init_zero            {false, {0, {0}}, false, {0, {0}}, false, 0, false, "", false, 0}
#define StellarAccountMergeOp_init_zero          {false, {0, {0}}, false, {0, {0}}}
#define StellarManageDataOp_init_zero            {false, {0, {0}}, false, "", false, {0, {0}}}
#define StellarBumpSequenceOp_init_zero          {false, {0, {0}}, false, 0}
#define StellarSignedTx_init_zero                {false, {0, {0}}, false, {0, {0}}}
#define DebugLinkDecision_init_zero              {false, 0, false, 0, false, ""}
#define DebugLinkGetState_init_zero              {0}
#define DebugLinkState_init_zero                 {false, {0, {0}}, false, "", false, "", false, "", false, HDNodeType_init_zero, false, 0, false, "", false, {0, {0}}, false, "", false, 0, false, 0}
#define DebugLinkStop_init_zero                  {0}
#define DebugLinkLog_init_zero                   {false, 0, false, "", false, ""}
#define DebugLinkMemoryRead_init_zero            {false, 0, false, 0}
#define DebugLinkMemory_init_zero                {false, {0, {0}}}
#define DebugLinkMemoryWrite_init_zero           {false, 0, false, {0, {0}}, false, 0}
#define DebugLinkFlashErase_init_zero            {false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Address_address_tag                      1
#define ApplyFlags_flags_tag                     1
#define ApplySettings_language_tag               1
#define ApplySettings_label_tag                  2
#define ApplySettings_use_passphrase_tag         3
#define ApplySettings_homescreen_tag             4
#define ApplySettings_passphrase_source_tag      5
#define ApplySettings_auto_lock_delay_ms_tag     6
#define ButtonRequest_code_tag                   1
#define ButtonRequest_data_tag                   2
#define ChangePin_remove_tag                     1
#define CipherKeyValue_address_n_tag             1
#define CipherKeyValue_key_tag                   2
#define CipherKeyValue_value_tag                 3
#define CipherKeyValue_encrypt_tag               4
#define CipherKeyValue_ask_on_encrypt_tag        5
#define CipherKeyValue_ask_on_decrypt_tag        6
#define CipherKeyValue_iv_tag                    7
#define CipheredKeyValue_value_tag               1
#define CosiCommit_address_n_tag                 1
#define CosiCommit_data_tag                      2
#define CosiCommitment_commitment_tag            1
#define CosiCommitment_pubkey_tag                2
#define CosiSign_address_n_tag                   1
#define CosiSign_data_tag                        2
#define CosiSign_global_commitment_tag           3
#define CosiSign_global_pubkey_tag               4
#define CosiSignature_signature_tag              1
#define DebugLinkDecision_yes_no_tag             1
#define DebugLinkDecision_up_down_tag            2
#define DebugLinkDecision_input_tag              3
#define DebugLinkFlashErase_sector_tag           1
#define DebugLinkLog_level_tag                   1
#define DebugLinkLog_bucket_tag                  2
#define DebugLinkLog_text_tag                    3
#define DebugLinkMemory_memory_tag               1
#define DebugLinkMemoryRead_address_tag          1
#define DebugLinkMemoryRead_length_tag           2
#define DebugLinkMemoryWrite_address_tag         1
#define DebugLinkMemoryWrite_memory_tag          2
#define DebugLinkMemoryWrite_flash_tag           3
#define DebugLinkState_layout_tag                1
#define DebugLinkState_pin_tag                   2
#define DebugLinkState_matrix_tag                3
#define DebugLinkState_mnemonic_tag              4
#define DebugLinkState_node_tag                  5
#define DebugLinkState_passphrase_protection_tag 6
#define DebugLinkState_reset_word_tag            7
#define DebugLinkState_reset_entropy_tag         8
#define DebugLinkState_recovery_fake_word_tag    9
#define DebugLinkState_recovery_word_pos_tag     10
#define DebugLinkState_reset_word_pos_tag        11
#define ECDHSessionKey_session_key_tag           1
#define Entropy_entropy_tag                      1
#define EntropyAck_entropy_tag                   1
#define EthereumAddress_address_tag              1
#define EthereumGetAddress_address_n_tag         1
#define EthereumGetAddress_show_display_tag      2
#define EthereumMessageSignature_address_tag     1
#define EthereumMessageSignature_signature_tag   2
#define EthereumSignMessage_address_n_tag        1
#define EthereumSignMessage_message_tag          2
#define EthereumSignTx_address_n_tag             1
#define EthereumSignTx_nonce_tag                 2
#define EthereumSignTx_gas_price_tag             3
#define EthereumSignTx_gas_limit_tag             4
#define EthereumSignTx_to_tag                    5
#define EthereumSignTx_value_tag                 6
#define EthereumSignTx_data_initial_chunk_tag    7
#define EthereumSignTx_data_length_tag           8
#define EthereumSignTx_chain_id_tag              9
#define EthereumSignTx_tx_type_tag               10
#define EthereumTxAck_data_chunk_tag             1
#define EthereumTxRequest_data_length_tag        1
#define EthereumTxRequest_signature_v_tag        2
#define EthereumTxRequest_signature_r_tag        3
#define EthereumTxRequest_signature_s_tag        4
#define EthereumVerifyMessage_address_tag        1
#define EthereumVerifyMessage_signature_tag      2
#define EthereumVerifyMessage_message_tag        3
#define Failure_code_tag                         1
#define Failure_message_tag                      2
#define Features_vendor_tag                      1
#define Features_major_version_tag               2
#define Features_minor_version_tag               3
#define Features_patch_version_tag               4
#define Features_bootloader_mode_tag             5
#define Features_device_id_tag                   6
#define Features_pin_protection_tag              7
#define Features_passphrase_protection_tag       8
#define Features_language_tag                    9
#define Features_label_tag                       10
#define Features_initialized_tag                 12
#define Features_revision_tag                    13
#define Features_bootloader_hash_tag             14
#define Features_imported_tag                    15
#define Features_pin_cached_tag                  16
#define Features_passphrase_cached_tag           17
#define Features_firmware_present_tag            18
#define Features_needs_backup_tag                19
#define Features_flags_tag                       20
#define Features_model_tag                       21
#define Features_fw_major_tag                    22
#define Features_fw_minor_tag                    23
#define Features_fw_patch_tag                    24
#define Features_fw_vendor_tag                   25
#define Features_fw_vendor_keys_tag              26
#define Features_unfinished_backup_tag           27
#define GetAddress_address_n_tag                 1
#define GetAddress_coin_name_tag                 2
#define GetAddress_show_display_tag              3
#define GetAddress_multisig_tag                  4
#define GetAddress_script_type_tag               5
#define GetECDHSessionKey_identity_tag           1
#define GetECDHSessionKey_peer_public_key_tag    2
#define GetECDHSessionKey_ecdsa_curve_name_tag   3
#define GetEntropy_size_tag                      1
#define GetPublicKey_address_n_tag               1
#define GetPublicKey_ecdsa_curve_name_tag        2
#define GetPublicKey_show_display_tag            3
#define GetPublicKey_coin_name_tag               4
#define Initialize_state_tag                     1
#define Initialize_skip_passphrase_tag           2
#define LoadDevice_mnemonic_tag                  1
#define LoadDevice_node_tag                      2
#define LoadDevice_pin_tag                       3
#define LoadDevice_passphrase_protection_tag     4
#define LoadDevice_language_tag                  5
#define LoadDevice_label_tag                     6
#define LoadDevice_skip_checksum_tag             7
#define LoadDevice_u2f_counter_tag               8
#define MessageSignature_address_tag             1
#define MessageSignature_signature_tag           2
#define NEMAddress_address_tag                   1
#define NEMDecryptMessage_address_n_tag          1
#define NEMDecryptMessage_network_tag            2
#define NEMDecryptMessage_public_key_tag         3
#define NEMDecryptMessage_payload_tag            4
#define NEMDecryptedMessage_payload_tag          1
#define NEMGetAddress_address_n_tag              1
#define NEMGetAddress_network_tag                2
#define NEMGetAddress_show_display_tag           3
#define NEMSignTx_transaction_tag                1
#define NEMSignTx_multisig_tag                   2
#define NEMSignTx_transfer_tag                   3
#define NEMSignTx_cosigning_tag                  4
#define NEMSignTx_provision_namespace_tag        5
#define NEMSignTx_mosaic_creation_tag            6
#define NEMSignTx_supply_change_tag              7
#define NEMSignTx_aggregate_modification_tag     8
#define NEMSignTx_importance_transfer_tag        9
#define NEMSignedTx_data_tag                     1
#define NEMSignedTx_signature_tag                2
#define PassphraseAck_passphrase_tag             1
#define PassphraseAck_state_tag                  2
#define PassphraseRequest_on_device_tag          1
#define PassphraseStateRequest_state_tag         1
#define PinMatrixAck_pin_tag                     1
#define PinMatrixRequest_type_tag                1
#define Ping_message_tag                         1
#define Ping_button_protection_tag               2
#define Ping_pin_protection_tag                  3
#define Ping_passphrase_protection_tag           4
#define PublicKey_node_tag                       1
#define PublicKey_xpub_tag                       2
#define RecoveryDevice_word_count_tag            1
#define RecoveryDevice_passphrase_protection_tag 2
#define RecoveryDevice_pin_protection_tag        3
#define RecoveryDevice_language_tag              4
#define RecoveryDevice_label_tag                 5
#define RecoveryDevice_enforce_wordlist_tag      6
#define RecoveryDevice_type_tag                  8
#define RecoveryDevice_u2f_counter_tag           9
#define RecoveryDevice_dry_run_tag               10
#define ResetDevice_display_random_tag           1
#define ResetDevice_strength_tag                 2
#define ResetDevice_passphrase_protection_tag    3
#define ResetDevice_pin_protection_tag           4
#define ResetDevice_language_tag                 5
#define ResetDevice_label_tag                    6
#define ResetDevice_u2f_counter_tag              7
#define ResetDevice_skip_backup_tag              8
#define SetU2FCounter_u2f_counter_tag            1
#define SignIdentity_identity_tag                1
#define SignIdentity_challenge_hidden_tag        2
#define SignIdentity_challenge_visual_tag        3
#define SignIdentity_ecdsa_curve_name_tag        4
#define SignMessage_address_n_tag                1
#define SignMessage_message_tag                  2
#define SignMessage_coin_name_tag                3
#define SignMessage_script_type_tag              4
#define SignTx_outputs_count_tag                 1
#define SignTx_inputs_count_tag                  2
#define SignTx_coin_name_tag                     3
#define SignTx_version_tag                       4
#define SignTx_lock_time_tag                     5
#define SignTx_decred_expiry_tag                 6
#define SignedIdentity_address_tag               1
#define SignedIdentity_public_key_tag            2
#define SignedIdentity_signature_tag             3
#define StellarAccountMergeOp_source_account_tag 1
#define StellarAccountMergeOp_destination_account_tag 2
#define StellarAllowTrustOp_source_account_tag   1
#define StellarAllowTrustOp_trusted_account_tag  2
#define StellarAllowTrustOp_asset_type_tag       3
#define StellarAllowTrustOp_asset_code_tag       4
#define StellarAllowTrustOp_is_authorized_tag    5
#define StellarBumpSequenceOp_source_account_tag 1
#define StellarBumpSequenceOp_bump_to_tag        2
#define StellarChangeTrustOp_source_account_tag  1
#define StellarChangeTrustOp_asset_tag           2
#define StellarChangeTrustOp_limit_tag           3
#define StellarCreateAccountOp_source_account_tag 1
#define StellarCreateAccountOp_new_account_tag   2
#define StellarCreateAccountOp_starting_balance_tag 3
#define StellarCreatePassiveOfferOp_source_account_tag 1
#define StellarCreatePassiveOfferOp_selling_asset_tag 2
#define StellarCreatePassiveOfferOp_buying_asset_tag 3
#define StellarCreatePassiveOfferOp_amount_tag   4
#define StellarCreatePassiveOfferOp_price_n_tag  5
#define StellarCreatePassiveOfferOp_price_d_tag  6
#define StellarGetPublicKey_address_n_tag        1
#define StellarManageDataOp_source_account_tag   1
#define StellarManageDataOp_key_tag              2
#define StellarManageDataOp_value_tag            3
#define StellarManageOfferOp_source_account_tag  1
#define StellarManageOfferOp_selling_asset_tag   2
#define StellarManageOfferOp_buying_asset_tag    3
#define StellarManageOfferOp_amount_tag          4
#define StellarManageOfferOp_price_n_tag         5
#define StellarManageOfferOp_price_d_tag         6
#define StellarManageOfferOp_offer_id_tag        7
#define StellarPathPaymentOp_source_account_tag  1
#define StellarPathPaymentOp_send_asset_tag      2
#define StellarPathPaymentOp_send_max_tag        3
#define StellarPathPaymentOp_destination_account_tag 4
#define StellarPathPaymentOp_destination_asset_tag 5
#define StellarPathPaymentOp_destination_amount_tag 6
#define StellarPathPaymentOp_paths_tag           7
#define StellarPaymentOp_source_account_tag      1
#define StellarPaymentOp_destination_account_tag 2
#define StellarPaymentOp_asset_tag               3
#define StellarPaymentOp_amount_tag              4
#define StellarPublicKey_public_key_tag          1
#define StellarSetOptionsOp_source_account_tag   1
#define StellarSetOptionsOp_inflation_destination_account_tag 2
#define StellarSetOptionsOp_clear_flags_tag      3
#define StellarSetOptionsOp_set_flags_tag        4
#define StellarSetOptionsOp_master_weight_tag    5
#define StellarSetOptionsOp_low_threshold_tag    6
#define StellarSetOptionsOp_medium_threshold_tag 7
#define StellarSetOptionsOp_high_threshold_tag   8
#define StellarSetOptionsOp_home_domain_tag      9
#define StellarSetOptionsOp_signer_type_tag      10
#define StellarSetOptionsOp_signer_key_tag       11
#define StellarSetOptionsOp_signer_weight_tag    12
#define StellarSignTx_protocol_version_tag       1
#define StellarSignTx_address_n_tag              2
#define StellarSignTx_network_passphrase_tag     3
#define StellarSignTx_source_account_tag         4
#define StellarSignTx_fee_tag                    5
#define StellarSignTx_sequence_number_tag        6
#define StellarSignTx_timebounds_start_tag       8
#define StellarSignTx_timebounds_end_tag         9
#define StellarSignTx_memo_type_tag              10
#define StellarSignTx_memo_text_tag              11
#define StellarSignTx_memo_id_tag                12
#define StellarSignTx_memo_hash_tag              13
#define StellarSignTx_num_operations_tag         14
#define StellarSignedTx_public_key_tag           1
#define StellarSignedTx_signature_tag            2
#define Success_message_tag                      1
#define TxAck_tx_tag                             1
#define TxRequest_request_type_tag               1
#define TxRequest_details_tag                    2
#define TxRequest_serialized_tag                 3
#define VerifyMessage_address_tag                1
#define VerifyMessage_signature_tag              2
#define VerifyMessage_message_tag                3
#define VerifyMessage_coin_name_tag              4
#define WordAck_word_tag                         1
#define WordRequest_type_tag                     1

/* Struct field encoding specification for nanopb */
extern const pb_field_t Initialize_fields[3];
extern const pb_field_t GetFeatures_fields[1];
extern const pb_field_t Features_fields[27];
extern const pb_field_t ClearSession_fields[1];
extern const pb_field_t ApplySettings_fields[7];
extern const pb_field_t ApplyFlags_fields[2];
extern const pb_field_t ChangePin_fields[2];
extern const pb_field_t Ping_fields[5];
extern const pb_field_t Success_fields[2];
extern const pb_field_t Failure_fields[3];
extern const pb_field_t ButtonRequest_fields[3];
extern const pb_field_t ButtonAck_fields[1];
extern const pb_field_t PinMatrixRequest_fields[2];
extern const pb_field_t PinMatrixAck_fields[2];
extern const pb_field_t Cancel_fields[1];
extern const pb_field_t PassphraseRequest_fields[2];
extern const pb_field_t PassphraseAck_fields[3];
extern const pb_field_t PassphraseStateRequest_fields[2];
extern const pb_field_t PassphraseStateAck_fields[1];
extern const pb_field_t GetEntropy_fields[2];
extern const pb_field_t Entropy_fields[2];
extern const pb_field_t GetPublicKey_fields[5];
extern const pb_field_t PublicKey_fields[3];
extern const pb_field_t GetAddress_fields[6];
extern const pb_field_t EthereumGetAddress_fields[3];
extern const pb_field_t Address_fields[2];
extern const pb_field_t EthereumAddress_fields[2];
extern const pb_field_t WipeDevice_fields[1];
extern const pb_field_t LoadDevice_fields[9];
extern const pb_field_t ResetDevice_fields[9];
extern const pb_field_t BackupDevice_fields[1];
extern const pb_field_t EntropyRequest_fields[1];
extern const pb_field_t EntropyAck_fields[2];
extern const pb_field_t RecoveryDevice_fields[10];
extern const pb_field_t WordRequest_fields[2];
extern const pb_field_t WordAck_fields[2];
extern const pb_field_t SignMessage_fields[5];
extern const pb_field_t VerifyMessage_fields[5];
extern const pb_field_t MessageSignature_fields[3];
extern const pb_field_t CipherKeyValue_fields[8];
extern const pb_field_t CipheredKeyValue_fields[2];
extern const pb_field_t SignTx_fields[7];
extern const pb_field_t TxRequest_fields[4];
extern const pb_field_t TxAck_fields[2];
extern const pb_field_t EthereumSignTx_fields[11];
extern const pb_field_t EthereumTxRequest_fields[5];
extern const pb_field_t EthereumTxAck_fields[2];
extern const pb_field_t EthereumSignMessage_fields[3];
extern const pb_field_t EthereumVerifyMessage_fields[4];
extern const pb_field_t EthereumMessageSignature_fields[3];
extern const pb_field_t SignIdentity_fields[5];
extern const pb_field_t SignedIdentity_fields[4];
extern const pb_field_t GetECDHSessionKey_fields[4];
extern const pb_field_t ECDHSessionKey_fields[2];
extern const pb_field_t SetU2FCounter_fields[2];
extern const pb_field_t NEMGetAddress_fields[4];
extern const pb_field_t NEMAddress_fields[2];
extern const pb_field_t NEMSignTx_fields[10];
extern const pb_field_t NEMSignedTx_fields[3];
extern const pb_field_t NEMDecryptMessage_fields[5];
extern const pb_field_t NEMDecryptedMessage_fields[2];
extern const pb_field_t CosiCommit_fields[3];
extern const pb_field_t CosiCommitment_fields[3];
extern const pb_field_t CosiSign_fields[5];
extern const pb_field_t CosiSignature_fields[2];
extern const pb_field_t StellarGetPublicKey_fields[2];
extern const pb_field_t StellarPublicKey_fields[2];
extern const pb_field_t StellarSignTx_fields[14];
extern const pb_field_t StellarTxOpRequest_fields[1];
extern const pb_field_t StellarPaymentOp_fields[5];
extern const pb_field_t StellarCreateAccountOp_fields[4];
extern const pb_field_t StellarPathPaymentOp_fields[8];
extern const pb_field_t StellarManageOfferOp_fields[8];
extern const pb_field_t StellarCreatePassiveOfferOp_fields[7];
extern const pb_field_t StellarSetOptionsOp_fields[13];
extern const pb_field_t StellarChangeTrustOp_fields[4];
extern const pb_field_t StellarAllowTrustOp_fields[6];
extern const pb_field_t StellarAccountMergeOp_fields[3];
extern const pb_field_t StellarManageDataOp_fields[4];
extern const pb_field_t StellarBumpSequenceOp_fields[3];
extern const pb_field_t StellarSignedTx_fields[3];
extern const pb_field_t DebugLinkDecision_fields[4];
extern const pb_field_t DebugLinkGetState_fields[1];
extern const pb_field_t DebugLinkState_fields[12];
extern const pb_field_t DebugLinkStop_fields[1];
extern const pb_field_t DebugLinkLog_fields[4];
extern const pb_field_t DebugLinkMemoryRead_fields[3];
extern const pb_field_t DebugLinkMemory_fields[2];
extern const pb_field_t DebugLinkMemoryWrite_fields[4];
extern const pb_field_t DebugLinkFlashErase_fields[2];

/* Maximum encoded size of messages (where known) */
#define Initialize_size                          68
#define GetFeatures_size                         0
#define Features_size                            558
#define ClearSession_size                        0
#define ApplySettings_size                       1100
#define ApplyFlags_size                          6
#define ChangePin_size                           2
#define Ping_size                                265
#define Success_size                             259
#define Failure_size                             270
#define ButtonRequest_size                       270
#define ButtonAck_size                           0
#define PinMatrixRequest_size                    11
#define PinMatrixAck_size                        12
#define Cancel_size                              0
#define PassphraseRequest_size                   2
#define PassphraseAck_size                       119
#define PassphraseStateRequest_size              66
#define PassphraseStateAck_size                  0
#define GetEntropy_size                          6
#define Entropy_size                             1027
#define GetPublicKey_size                        107
#define PublicKey_size                           (121 + HDNodeType_size)
#define GetAddress_size                          (90 + MultisigRedeemScriptType_size)
#define EthereumGetAddress_size                  50
#define Address_size                             133
#define EthereumAddress_size                     22
#define WipeDevice_size                          0
#define LoadDevice_size                          (326 + HDNodeType_size)
#define ResetDevice_size                         74
#define BackupDevice_size                        0
#define EntropyRequest_size                      0
#define EntropyAck_size                          131
#define RecoveryDevice_size                      80
#define WordRequest_size                         11
#define WordAck_size                             14
#define SignMessage_size                         1109
#define VerifyMessage_size                       1250
#define MessageSignature_size                    200
#define CipherKeyValue_size                      1358
#define CipheredKeyValue_size                    1027
#define SignTx_size                              53
#define TxRequest_size                           (23 + TxRequestDetailsType_size + TxRequestSerializedType_size)
#define TxAck_size                               (6 + TransactionType_size)
#define EthereumSignTx_size                      1251
#define EthereumTxRequest_size                   80
#define EthereumTxAck_size                       1027
#define EthereumSignMessage_size                 1075
#define EthereumVerifyMessage_size               1116
#define EthereumMessageSignature_size            89
#define SignIdentity_size                        (558 + IdentityType_size)
#define SignedIdentity_size                      235
#define GetECDHSessionKey_size                   (107 + IdentityType_size)
#define ECDHSessionKey_size                      67
#define SetU2FCounter_size                       6
#define NEMGetAddress_size                       56
#define NEMAddress_size                          43
#define NEMSignTx_size                           (50 + NEMTransactionCommon_size + NEMTransactionCommon_size + NEMTransfer_size + NEMProvisionNamespace_size + NEMMosaicCreation_size + NEMMosaicSupplyChange_size + NEMAggregateModification_size + NEMImportanceTransfer_size)
#define NEMSignedTx_size                         2117
#define NEMDecryptMessage_size                   1163
#define NEMDecryptedMessage_size                 1027
#define CosiCommit_size                          82
#define CosiCommitment_size                      68
#define CosiSign_size                            150
#define CosiSignature_size                       34
#define StellarGetPublicKey_size                 60
#define StellarPublicKey_size                    34
#define StellarSignTx_size                       1244
#define StellarTxOpRequest_size                  0
#define StellarPaymentOp_size                    (85 + StellarAssetType_size)
#define StellarCreateAccountOp_size              79
#define StellarPathPaymentOp_size                (132 + StellarAssetType_size + StellarAssetType_size + 5*StellarAssetType_size)
#define StellarManageOfferOp_size                (80 + StellarAssetType_size + StellarAssetType_size)
#define StellarCreatePassiveOfferOp_size         (69 + StellarAssetType_size + StellarAssetType_size)
#define StellarSetOptionsOp_size                 185
#define StellarChangeTrustOp_size                (51 + StellarAssetType_size)
#define StellarAllowTrustOp_size                 95
#define StellarAccountMergeOp_size               68
#define StellarManageDataOp_size                 168
#define StellarBumpSequenceOp_size               45
#define StellarSignedTx_size                     100
#define DebugLinkDecision_size                   39
#define DebugLinkGetState_size                   0
#define DebugLinkState_size                      (1474 + HDNodeType_size)
#define DebugLinkStop_size                       0
#define DebugLinkLog_size                        300
#define DebugLinkMemoryRead_size                 12
#define DebugLinkMemory_size                     1027
#define DebugLinkMemoryWrite_size                1035
#define DebugLinkFlashErase_size                 6

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MESSAGES_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
